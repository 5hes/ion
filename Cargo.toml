[package]

authors = [
    "Michael Aaron Murphy <mmstickman@gmail.com>",
    "Jeremy Soller <jackpot51@gmail.com>",
    "Skyler Berg <skylertheberg@gmail.com>",
    "stratact <stratact1@gmail.com>",
    "AdminXVII <dev.xlheureux@gmail.com>",
    "Hunter Goldstein <hunter.d.goldstein@gmail.com>",
    "jD91mZM2 <me@krake.one>",
    "Agustin Chiappe Berrini <jnieve@gmail.com>",
    "Sag0Sag0 <Sag0Sag0@users.noreply.github.com>",
]
build = "build.rs"
categories = ["command-line-utilities", "config"]
description = "The Ion Shell"
documentation = "https://doc.redox-os.org/ion-manual/"
edition = "2018"
keywords = ["shell", "script", "program", "config", "configuration"]
license-file = "LICENSE"
name = "ion-shell"
readme = "README.md"
repository = "https://gitlab.redox-os.org/redox-os/ion"
version = "1.0.0-alpha"
rust-version = "1.65.0"

[badges]
gitlab = { repository = "https://gitlab.redox-os.org/redox-os/ion", branch = "master" }
maintenance = { status = "experimental" }

[features]
man = ["builtins-proc/man"]
piston = ["piston-ai_behavior", "piston_window", "piston2d-sprite"]
unicode = ["regex/unicode"]

[workspace]
members = [
    "members/builtins-proc",
    "members/ranges",
    "members/scopes-rs",
    "members/types-rs",
]

[dev-dependencies]
criterion = "*"
serial_test = "*"
serial_test_derive = "*"

[[bench]]
name = "terminator"
harness = false

[[bench]]
name = "statement"
harness = false

[[example]]
name = "window"
required-features = ["piston"]

[[bin]]
name = "ion"
path = "src/main.rs"

[dependencies]
calculate = { git = "https://gitlab.redox-os.org/redox-os/calc" }  # 移除 rev
thiserror = "*"
glob = "*"
redox_liner = { git = "https://gitlab.redox-os.org/redox-os/liner" }
rand = "*"
regex = { version = "*", default-features = false, features = ["std", "perf"] }
small = { git = "https://gitlab.redox-os.org/redox-os/small", features = ["std"] }
smallvec = "*"
unicode-segmentation = "*"
ion-ranges = { version = "*", path = "members/ranges" }
scopes = { version = "*", path = "members/scopes-rs" }
types-rs = { version = "*", path = "members/types-rs" }
builtins-proc = { version = "*", path = "members/builtins-proc" }
itertools = "*"
lexical = "*"
object-pool = "*"
auto_enums = "*"
atty = "*"
permutate = "*"
xdg = "*"
nix = { git = "https://github.com/nix-rust/nix.git" }  # 移除 rev
mktemp = "*"

# window example
piston-ai_behavior = { version = "*", optional = true }
piston_window = { version = "*", optional = true }
piston2d-sprite = { version = "*", optional = true }

[target."cfg(all(unix, not(target_os = \"redox\")))".dependencies]
users = "*"

[target."cfg(target_os = \"redox\")".dependencies]
redox_users = "*"

[target."cfg(target_os = \"dragonfly\")".dependencies]

[target.aarch64-unknown-linux-musl]
linker = "clang"
ar = "llvm-ar"
rustflags = [
    "-C", "target-feature=+neon",  # 启用 NEON 指令集
    "-C", "target-feature=+crt-static",  # 使用静态链接
    "-C", "link-arg=-Wl,--gc-sections",  # 去除未使用的部分
]

errno-dragonfly = "*"

[lib]
path = "src/lib/lib.rs"

# [profile.dev]
# opt-level = 0
# debug = true

[profile.dev]
opt-level = 0
debug = true
split-debuginfo = '...'  # Platform-specific.
strip = "none"
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = true
codegen-units = 256
rpath = false

# [profile.release]
# opt-level = 3
# debug = false
# split-debuginfo = '...'  # Platform-specific.
# strip = "none"
# debug-assertions = false
# overflow-checks = false
# lto = false
# panic = 'unwind'
# incremental = false
# codegen-units = 16
# rpath = false

[profile.release]
codegen-units = 1
level = "3"
strip = true
lto = true
panic = "abort"

# Required to make `cargo vendor` work
[patch.crates-io]
redox_liner = { git = "https://gitlab.redox-os.org/redox-os/liner" }









